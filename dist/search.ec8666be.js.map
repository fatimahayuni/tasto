{"mappings":"AAAA,eAAe,aAAa,UAAU;IAClC,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,GAAG,CAAC,CAAC,qDAAqD,EAAE,WAAW,CAAC;QACrG,OAAO,SAAS,IAAI,EAAE,sCAAsC;IAChE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;IAC5C;AACJ;AAEA,SAAS,eAAe,MAAM;IAC1B,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAC7C,cAAc,SAAS,GAAG,IAAK,6BAA6B;IAE5D,2CAA2C;IAC3C,IAAI,OAAO,KAAK,EACZ,KAAK,IAAI,KAAK,OAAO,KAAK,CAAE;QACxB,MAAM,aAAa,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,EAAE,UAAU,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC;QAEjH,IAAI,cAAc,SAAS,aAAa,CAAC;QACzC,YAAY,SAAS,CAAC,GAAG,CAAC;QAE1B,YAAY,SAAS,GAAG,CAAC;qBAChB,EAAE,WAAW;;0BAER,EAAE,EAAE,YAAY,CAAC,0CAA0C,EAAE,EAAE,OAAO,CAAC;;0DAEvC,EAAE,EAAE,OAAO,CAAC;4CAC1B,EAAE,EAAE,OAAO,CAAC;;;gBAGxC,CAAC;QAEL,0CAA0C;QAC1C,cAAc,WAAW,CAAC;IAC9B;SAEA,cAAc,SAAS,GAAG;AAElC;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,MAAM,gBAAgB,SAAS,aAAa,CAAC;IAE7C,MAAM,eAAe;QACjB,MAAM,cAAc,cAAc,KAAK,CAAC,IAAI;QAC5C,IAAI,aAAa;YACb,MAAM,SAAS,MAAM,aAAa;YAClC,IAAI,QAAQ;gBACR,QAAQ,GAAG,CAAC,SAAU,8BAA8B;gBACpD,eAAe;YACnB,OACI,QAAQ,KAAK,CAAC;QAEtB;IACJ;IAEA,0BAA0B;IAC1B,OAAO,gBAAgB,CAAC,SAAS;IAEjC,yCAAyC;IACzC,cAAc,gBAAgB,CAAC,WAAW,SAAS,KAAK;QACpD,IAAI,MAAM,GAAG,KAAK,SAAS;YACvB,MAAM,cAAc,IAAI,0BAA0B;YAClD;QACJ;IACJ;AACJ","sources":["search.js"],"sourcesContent":["async function searchRecipe(recipeName) {\n    try {\n        const response = await axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${recipeName}`);\n        return response.data; // Ensure this returns the actual data\n    } catch (error) {\n        console.error(\"Error fetching recipe:\", error);\n    }\n}\n\nfunction displayRecipes(recipe) {\n    const outputElement = document.querySelector(\"#output\");\n    outputElement.innerHTML = '';  // Clear the previous content\n\n    // Check if there are meals in the response\n    if (recipe.meals) {\n        for (let a of recipe.meals) {\n            const recipeLink = `recipe.html?mealId=${encodeURIComponent(a.idMeal)}&mealName=${encodeURIComponent(a.strMeal)}`;\n\n            let cardElement = document.createElement(\"div\");\n            cardElement.classList.add(\"col\");\n\n            cardElement.innerHTML = `\n            <a href=\"${recipeLink}\" target=\"_blank\" class=\"text-decoration-none\">\n                <div class=\"card card-image h-100\">\n                <img src=\"${a.strMealThumb}\" class=\"card-img-top standard-size\" alt=\"${a.strMeal}\">\n                <div class=\"card-body black-bg\">\n                    <h5 class=\"card-food-name white-text\">${a.strMeal}</h5>\n                    <p class=\"card-cuisine\">${a.strArea}</p>\n                </div>\n                </div>\n            </a>`;\n\n            // Append the card to the output container\n            outputElement.appendChild(cardElement);\n        }\n    } else {\n        outputElement.innerHTML = \"<p>No recipes found. Try another search.</p>\";\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const button = document.querySelector(\"#submit\");\n    const searchElement = document.querySelector(\"#searchTerms\");\n\n    const handleSearch = async () => {\n        const searchTerms = searchElement.value.trim();\n        if (searchTerms) {\n            const recipe = await searchRecipe(searchTerms);\n            if (recipe) {\n                console.log(recipe);  // Check what is returned here\n                displayRecipes(recipe);\n            } else {\n                console.error(\"No recipe data returned\");\n            }\n        }\n    };\n\n    // Listen for button click\n    button.addEventListener(\"click\", handleSearch);\n\n    // Trigger search when \"Enter\" is pressed\n    searchElement.addEventListener(\"keydown\", function(event) {\n        if (event.key === 'Enter') {\n            event.preventDefault(); // Prevent form submission\n            handleSearch();\n        }\n    });\n});\n"],"names":[],"version":3,"file":"search.ec8666be.js.map","sourceRoot":"/__parcel_source_root/"}